{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumarraj/Desktop/ClassroomCampusX/src/components/my_courses/course.jsx\";\nimport React, { Component } from \"react\";\nimport CourseVideo from \"./courseVideo\";\nimport ContentList from \"./contentList\";\nimport http from \"../../services/httpService\";\nimport { apiEndPoint } from \"../../config.json\";\nimport LoadingDots from \"../common/loadingDots\";\nimport { toast } from \"react-toastify\";\n\nclass Course extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: null,\n      video: null\n    };\n\n    this.componentDidMount = async () => {\n      const {\n        courseId\n      } = this.props.match.params;\n      const batchId = localStorage.getItem(\"batch_id\");\n      const params = {\n        data: {\n          course_id: courseId,\n          batch_id: batchId\n        }\n      };\n      const {\n        data\n      } = await http.post(apiEndPoint + \"/course_content\", params);\n      const {\n        content_details\n      } = data;\n      this.setState({\n        content: content_details,\n        video: content_details[0][2]\n      });\n    };\n\n    this.handleContentClick = contentItem => {\n      if (contentItem[0] === \"Video\") {\n        console.log(contentItem[2]);\n        this.setState({\n          video: contentItem[2]\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      content,\n      video\n    } = this.state;\n\n    if (content) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CourseVideo, {\n        video: video,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ContentList, {\n        content: content,\n        onContentClick: this.handleContentClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"jumbotron d-flex align-items-center min-vh-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(LoadingDots, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default Course;","map":{"version":3,"sources":["/Users/shubhamkumarraj/Desktop/ClassroomCampusX/src/components/my_courses/course.jsx"],"names":["React","Component","CourseVideo","ContentList","http","apiEndPoint","LoadingDots","toast","Course","state","content","video","componentDidMount","courseId","props","match","params","batchId","localStorage","getItem","data","course_id","batch_id","post","content_details","setState","handleContentClick","contentItem","console","log","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CourseVideo from \"./courseVideo\";\nimport ContentList from \"./contentList\";\nimport http from \"../../services/httpService\";\nimport { apiEndPoint } from \"../../config.json\";\nimport LoadingDots from \"../common/loadingDots\";\nimport { toast } from \"react-toastify\";\n\nclass Course extends Component {\n  state = {\n    content: null,\n    video: null,\n  };\n  componentDidMount = async () => {\n    const { courseId } = this.props.match.params;\n    const batchId = localStorage.getItem(\"batch_id\");\n    const params = { data: { course_id: courseId, batch_id: batchId } };\n    const { data } = await http.post(apiEndPoint + \"/course_content\", params);\n    const { content_details } = data;\n    this.setState({ content: content_details, video: content_details[0][2] });\n  };\n  handleContentClick = (contentItem) => {\n    if (contentItem[0] === \"Video\") {\n      console.log(contentItem[2]);\n      this.setState({ video: contentItem[2] });\n    }\n  };\n  render() {\n    const { content, video } = this.state;\n\n    if (content) {\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row\" style={{ marginTop: 100 }}>\n            <div className=\"col-md-8\">\n              <CourseVideo video={video} />\n            </div>\n            <div className=\"col-md-4\">\n              <ContentList\n                content={content}\n                onContentClick={this.handleContentClick}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"jumbotron d-flex align-items-center min-vh-100\">\n          <div className=\"container\">\n            <LoadingDots />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Course;\n"]},"metadata":{},"sourceType":"module"}